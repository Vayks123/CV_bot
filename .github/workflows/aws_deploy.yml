name: deploy_aws_ec2
on: workflow_dispatch
jobs:
  
  Install_deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10' 

      - name: Cache dependences
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install requirements
        run: pip install -r requirements.txt
    

  test:
    runs-on: ubuntu-latest
    needs: Install_deps
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10' 

      - name: Cache dependences
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install requirements
        run: pip install -r requirements.txt

      - name: Run test
        run: pytest -v test_handlers.py
            

  deploy-infrastructure:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4 

      - name: Terraform download
        uses: hashicorp/setup-terraform@v3 
          

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
            
      
      - name: Terraform Init
        run: terraform -chdir=terraform init 

      - name: Terraform Validate
        run: terraform -chdir=terraform validate -no-color

      - name: Terraform Plan
        run: terraform -chdir=terraform plan -no-color

      - name: Terraform Apply
        run: terraform  -chdir=terraform apply --auto-approve

    
      - uses: actions/upload-artifact@v4
        with:
          name: host-ip
          path: terraform/host

          


  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download an artifact
        uses: actions/download-artifact@v4
        with:
            name: host-ip
            
      
      - run: sourse terraform/host

      - name: Deploy to EC2
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i --delete"
          SOURCE: "./"
          REMOTE_HOST: ${{env.HOSTIP}}
          REMOTE_USER: ubuntu
          EXCLUDE: "/terraform/, /.github/"
          SCRIPT_AFTER:  pip install -r requirements.txt && python main.py