name: deploy_aws_ec2
on: workflow_dispatch
jobs:
  
  Install_deps:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10' 

      - name: Cache dependences
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install requirements
        run: pip install -r requirements.txt
    

  test:
    runs-on: ubuntu-latest
    needs: Install_deps
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.10' 

      - name: Cache dependences
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      - name: Install requirements
        run: pip install -r requirements.txt

      - name: Run test
        run: pytest -v test_handlers.py
            

  deploy-infrastructure:
    runs-on: ubuntu-latest
    needs: test
    env:
      AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    steps:
      - uses: actions/checkout@v4 
      - name: Terraform download
        uses: hashicorp/setup-terraform@v3 
          
      - name: Terraform Init
        run: terraform -chdir=terraform init 

      - name: Terraform Validate
        run: terraform -chdir=terraform validate -no-color

      - name: Terraform Plan
        run: terraform -chdir=terraform plan -no-color

      - name: Terraform Apply
        run: terraform  -chdir=terraform apply --auto-approve

